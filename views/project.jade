doctype html
html(lang="en")
  head
    title FGLab - Project #{project.name}
    link(href="/bower_components/bootstrap/dist/css/bootstrap.min.css", rel="stylesheet")
    link(href="/bower_components/bootstrap/dist/css/bootstrap-theme.min.css", rel="stylesheet")
    script(src="/bower_components/jquery/dist/jquery.min.js")
  body
    h1 Project: #{project.name} (#{project._id})
    h2 New Experiment
    form#new-experiment
      each val, key in project.schema
        if (val.type === "int")
          .form-group
            label(for="#{key}") #{key}
            | &nbsp;
            input(type="number", value="#{val.default}", name="#{key}", required)
        else if (val.type === "float")
          .form-group
            label(for="#{key}") #{key}
            | &nbsp;
            input(type="number", value="#{val.default}", step="any", name="#{key}", required)
        else if (val.type === "bool")
          .form-group
            label(for="#{key}") #{key}
            | &nbsp;
            input(type="text", value="#{val.default}", pattern="(true|false)", title="Enter true or false", name="#{key}", required)
        else if (val.type === "string")
          .form-group
            label(for="#{key}") #{key}
            | &nbsp;
            input(type="text", value="#{val.default}", name="#{key}", required)
        else if (val.type === "enum")
          .form-group
            label(for="#{key}") #{key}
            select(name="#{key}")
              each value in val.values
                if (value === val.default)
                  option(value="#{value}", selected="selected") #{value}
                else
                  option(value="#{value}") #{value}
      button(type="submit") Check Availability

    h3 Available Machines
    #available-machines

    h2 Experiments
    ul
      - each experiment in experiments
        li
          a(href="/api/experiments/" + experiment._id, class="delete") (delete)
          | &nbsp;
          a(href="/experiments/" + experiment._id) #{experiment._id}
          | &nbsp;
          if experiment.test
            if experiment.test.score
              = "score: " + experiment.test.score
          | &nbsp;
          span= JSON.stringify(experiment.hyperparams)

    script.
      $(function() {
        // Checks availability
        $("#new-experiment").on("submit", function() {
           $.ajax({
            url: "/experiments/#{project._id}/check", // TODO Change to query params
            type: "POST"
          }).
          then(function(responses) {
            var $list = $("#available-machines");
            $list.html(""); // Empty list
            // Fill list
            responses.forEach(function(mac) {
              mac = JSON.parse(mac); // Extract information from string
              $list.append("<button data-id='" + mac.id + "'>" + mac.hostname + "</button>");
            });
          });
          return false; // Stop event and propagation
        });

        // Submits experiment (with dynamically added buttons)
        $("#available-machines").on("click", "button", function() {
          // Get machine
          var macId = $(this).data("id");
          // Process form
          var formObj = {};
          // Loop over form simply (does not work on nested data)
          $("#new-experiment").find(":input").not(":submit").each(function(ind, el) {
            var $el = $(el);
            var name = $el.attr("name");
            var val = $el.val();
            // Test for bools
            if ($el.attr("pattern")) {
              val = (val === "true");
            }
            formObj[name] = val; // Set key and value
          });

          // TODO Sort race condition for capacity
          $.ajax({
            url: "/new-experiment/#{project._id}/" + macId,
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(formObj)
          }).
          then(function(resp) {
            location.assign("/experiments/" + resp.id); // Move to new experiment page
          });
          return false; // Stop event and propagation
        });

        // Deletes existing experiment
        $("a.delete").on("click", function() {
          $.ajax({
            url: $(this).attr("href"),
            type: "DELETE"
          })
          .then(function() {
            location.reload(); // Refresh page
          });
          return false; // Stop event and propagation
        });
      });
